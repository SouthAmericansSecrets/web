/*if (!document.getElementsByClassName) document.getElementsByClassName=function(classname){ var els=[]; var tmp=document.getElementsByTagName("*"); var regex=new RegExp("(^|\\s)" + classname + "(\\s|$)"); for (var i=0; i<tmp.length; i++){ if (regex.test(tmp[i].className)){ els.push(tmp[i]); } } return els; };*/document.getCookie = function(cname){    var oC = document.cookie.split(';');    for(var i=0; i<oC.length;i++){        var oP=oC[i].split('=');        var sK=oP[0];        while (sK.charAt(0)==' ') sK = sK.substring(1,sK.length);        var sV=oP.length>1?oP[1]:'';        if(sK==cname)            return decodeURIComponent(sV);    }    return null;};document.setCookie = function(cname,val,days){    var expires=0;    if(days){        var date=new Date();        date.setTime(date.getTime()+(days*24*60*60*1000));        var expires="expires="+date.toGMTString()+';';    }    var cookie = cname + '=' + encodeURIComponent(val) + ';';    cookie+=expires;    document.cookie= cookie;};document.getJSONP = function(url,data,callback){    var query = null;    if (!callback) {        throw ("callback parameter is required");    }    else {        if (!query) query = "?callback=" + encodeURIComponent(callback);        else query += "&callback=" +  encodeURIComponent(callback);    }    if (!data) data = null;    else {        for (key in data){            if (!query) query = "?" + encodeURIComponent(key) + "=" + encodeURIComponent(data[key]);            else query += "&" + encodeURIComponent(key) + "=" + encodeURIComponent(data[key]);        }    }    if (!url) url = document.href.location;    var script = document.createElement("script");    script.type = "text/javascript";    script.src = url + query;    var head = document.getElementsByTagName("head")[0];    head.appendChild(script);}document.clearCookie = function(cname){    document.setCookie(cname,'');};document.getPrefLang = function(){    /*    var cksettings = document.getCookie('settings');    var settings = {};    if (cksettings) settings = JSON.parse(cksettings);    if (settings.preflang) return settings.preflang;    else return null;    */    var preflang = document.getCookie('preflang');    if (!preflang) preflang = document.getCookie(' preflang');    console.log("preflang:"+preflang);    if (!preflang) return "en";    else return preflang;};document.setPrefLang = function(lang,days){    /* var d=30;    if (days) d=days;    var cksettings = document.getCookie('settings');    var settings = {};    if (cksettings) settings = JSON.parse(cksettings);    settings.preflang = lang;    console.log(settings);    document.setCookie('settings', JSON.stringify(settings),d); */    document.setCookie('preflang',lang,0);};document.getElementsByClassName = function(clsName, boolSingle){    var r = new Array();    var e = document.getElementsByTagName('*');    //var e = document.getElementsByTagName("div");    for(var i = 0;i < e.length;i++)        if(e[i].className == clsName) {            r.push(e[i]);            if (boolSingle) break;        }    if (boolSingle) {        if (r.length > 0) return r[0];        else return null;    }    else return r;};document.capitalizeFirstLetter = function(string){    return string.charAt(0).toUpperCase() + string.slice(1);}var ids = ["Msxml2.XMLHTTP", "Microsoft.XMLHTTP", "Msxml2.XMLHTTP.4.0"];if (typeof XMLHttpRequest === "undefined") {    for (var i = 0; i < ids.length; i++) {        try {            new ActiveXObject(ids[i]);            window.XMLHttpRequest = function() {                return new ActiveXObject(ids[i]);            };            break;        } catch (e) {}    }}// polyfill for CustomEvent (see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent(function () {    function CustomEvent ( event, params ) {        params = params || { bubbles: false, cancelable: false, detail: undefined };        var evt = document.createEvent( 'CustomEvent' );        evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );        return evt;    };    CustomEvent.prototype = window.Event.prototype;    window.CustomEvent = CustomEvent;})();// addEventListener polyfill 1.0 / Eirik Backer / MIT Licence(function(win, doc){    if(win.addEventListener)return;		//No need to polyfill    function docHijack(p){var old = doc[p];doc[p] = function(v){return addListen(old(v))}}    function addEvent(on, fn, self){        return (self = this).attachEvent('on' + on, function(e){            var e = e || win.event;            e.preventDefault  = e.preventDefault  || function(){e.returnValue = false}            e.stopPropagation = e.stopPropagation || function(){e.cancelBubble = true}            fn.call(self, e);        });    }    function addListen(obj, i){        if(i = obj.length)while(i--)obj[i].addEventListener = addEvent;        else obj.addEventListener = addEvent;        return obj;    }    addListen([doc, win]);    if('Element' in win)win.Element.prototype.addEventListener = addEvent;			//IE8    else{																			//IE < 8        doc.attachEvent('onreadystatechange', function(){addListen(doc.all)});		//Make sure we also init at domReady        docHijack('getElementsByTagName');        docHijack('getElementById');        docHijack('createElement');        addListen(doc.all);    }})(window, document);